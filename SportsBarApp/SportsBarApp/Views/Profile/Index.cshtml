@model SportsBarApp.Models.ViewModels.ProfileWallViewModel

@{
    ViewBag.Title = "SportsBar";
    Layout = "~/Views/Shared/_LayoutProfileWall.cshtml";    

}

<div class="container" id="wrapper-wall">
    <div class="row">
        <div class="col-md-3">   
            <table>
                <tr>
                    <td>                         
                        @if (Model.UserProfile.ProfilePic == null)
                        {
                            <img src=' ~/Content/images/avatar-default.png' />
                        }
                        else
                        {
                            @Html.Image(Model.UserProfile.ProfilePic.Content);
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.FirstName) @Html.DisplayFor(m => m.LastName)
                    </td>
                </tr>
               
                <tr>
                    <td>
                        @Html.LabelFor(m => m.UserProfile.DateOfBirth, "DOB")
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.UserProfile.DateOfBirth)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.UserProfile.City)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.UserProfile.City)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.UserProfile.Country)                            
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.UserProfile.Country)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.UserProfile.FavouriteSports, "Sports")
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.UserProfile.FavouriteSports)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.UserProfile.FavouriteTeams, "Teams") 
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.UserProfile.FavouriteTeams)
                    </td>
                </tr>
            </table>
                
                    
        </div>
        <div class="col-md-6">
            @using (Html.BeginForm("UploadPost", "Profile", FormMethod.Post, new { @class = "form-write-post" }))
            {
                <section>
                    @Html.TextArea("Message", "", 4, 20,new { @class = "form-control", @placeholder = "What's up ?" })

                    @Html.Hidden("page", ViewData["Domain"])
                    <input type="submit" value="Upload Post" class="btn btn-info" />
                   
                </section>
            }
           
            @Html.Partial("Wall", Model.Posts)
        


            </div>
        <div class="col-md-3">
            <ul>
                @for (int i = 0; i < 6; i++)
                {
                    <li>
                        Friends list is going to be here.
                    </li>
                }
                    
            </ul>
                    
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(function () {
            $('#search').autocomplete({ //Autocomplete for jQuery UI
                source: function (request, response) { // get function with request object who holds a term property and response that is a function
                    $.ajax({
                        url: '@Url.Action("Search", "Profile")',
                        dataType: 'json',
                        data: { search: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {

                                return {
                                    value: item.Name,
                                    label: item.Photo,
                                    id: item.Friend.ProfileId
                                };
                            }))
                        }

                    })
                },
                minLength: 1,
                select: function (event, ui) {
                    window.location.pathname = "Profile/MyProfile/" + ui.item.id;
                    return false;
                },
            }).data("ui-autocomplete")._renderItem = function (ul, item) {
                
                return $('<div/>')
                    .data('ui-autocomplete-item', item)
                    .append("<li class='list-group-item'><div class='row'><div class='col-md-12 search-result-item'><div class='col-md-2'><img src=" + item.label +" /></div><div class='col-md-10'>" + item.value + "</div></div></div></li>")
                    .appendTo(ul);
                };



        })
    </script>
}


